{"version":3,"file":"main.js","sources":["webpack://@hou5emd/email-validator/./src/is-valid-email.ts"],"sourcesContent":["const disallowInStart = /[-_\\\\/[\\]{}|!?;:,.#&$@^]/;\nconst disallowInName = /[-_.]{2,}/;\nconst disallowInDomain = /(?:(^[-])|([-]$)|([-]{2,})|(_))/g;\nconst disallowInEmail = /[\\\\/[\\]{}|!?;:,#&$^\\s]/;\n\nexport function isValidEmail(email: string): boolean {\n  if (email.length === 0 || email[0].match(disallowInStart) || email.match(disallowInEmail)) {\n    return false;\n  }\n  const emailParts = email.split('@');\n\n  if (emailParts.length !== 2) {\n    return false;\n  }\n\n  const userName = emailParts[0];\n\n  const domainParts = emailParts[1].split('.');\n\n  if (\n    domainParts.length === 1 ||\n    domainParts.some((part) => part === '' || part.length > 63 || part.match(disallowInDomain))\n  ) {\n    return false;\n  }\n\n  if (userName.match(disallowInName)) {\n    return false;\n  }\n\n  return true;\n}\nmodule.exports = { isValidEmail };\n"],"names":["disallowInStart","disallowInName","disallowInDomain","disallowInEmail","module","isValidEmail","email","emailParts","userName","domainParts","part"],"mappings":"yDAAA,IAAMA,EAAkB,2BAClBC,EAAiB,YACjBC,EAAmB,mCACnBC,EAAkB,wBA6BxBC,CAAAA,EAAO,OAAO,CAAG,CAAEC,aA3BZ,SAAsBC,CAAa,EACxC,GAAIA,AAAiB,IAAjBA,EAAM,MAAM,EAAUA,CAAK,CAAC,EAAE,CAAC,KAAK,CAACN,IAAoBM,EAAM,KAAK,CAACH,GACvE,MAAO,GAET,IAAMI,EAAaD,EAAM,KAAK,CAAC,KAE/B,GAAIC,AAAsB,IAAtBA,EAAW,MAAM,CACnB,MAAO,GAGT,IAAMC,EAAWD,CAAU,CAAC,EAAE,CAExBE,EAAcF,CAAU,CAAC,EAAE,CAAC,KAAK,CAAC,WAExC,EACyB,IAAvBE,EAAY,MAAM,EAClBA,EAAY,IAAI,CAAC,SAACC,CAAI,E,MAAKA,AAAS,KAATA,GAAeA,EAAK,MAAM,CAAG,IAAMA,EAAK,KAAK,CAACR,E,IAKvEM,EAAS,KAAK,CAACP,KAIZ,EACT,CACgC,C"}